---
format:
  html:
    toc: true
    toc-title: "Contenidos"
    toc-expand: 1
    code-overflow: wrap
editor_options:
  markdown:
    wrap: sentence
    canonical: true
theme: cosmo
---
# An√°lisis de datos {#sec-analisis-datos}

```{r}
#| include: false
source("_common.R")
```

## Importando datos en R

Antes de ingresar nuestros datos, es muy importante indicar a R cu√°l ser√° nuestro directorio de trabajo o tambi√©n llamado **Working Directory**. Es decir, debemos establecer la carpeta dentro de la cual se encuentran los archivos a utilizar, y donde se exportar√°n los que generes durante tu trabajo.

R toma autom√°ticamente un directorio en el cual trabajar. Puedes saber en que directorio est√°s trabajando con la funci√≥n `getwd()`.

Existen algunas formas de establecer el lugar de trabajo. La primera es de manera manual:
```{r eval=FALSE}
setwd("~/Curso_R/Estadistica_basica")
```

Nota que el s√≠mbolo `~` se encuentra al inicio del directorio escrito. Este s√≠mbolo
reemplaza al resultado obtenido de la funci√≥n `getwd`.

La segunda manera de establecer el directorio es presionando las teclas `Ctrl+Shift+H`. Inmediatamente se abrir√° una ventana en la que podr√°s seleccionar tu directorio manualmente.

### Archivos *csv*

Puedes descargar el achivo utilizado en este tutorial desde este [link](https://mega.nz/file/Rk92CCBb#AEQqmA4g8CWvtA1g98lCUzWtRZzmUklwpuCgLFsk8tg) . Antes de importar este u otro archivo debes tener claro cu√°l es el tipo de extensi√≥n, ya que diferentes formatos implican diferentes funciones para importarlos.

Tanto los archivos [txt](http://www.sthda.com/english/wiki/reading-data-from-txt-csv-files-r-base-functions) y  [xlsxl](http://www.sthda.com/english/wiki/reading-data-from-excel-files-xls-xlsx-into-r) resultan un poco m√°s complicados de leer e incluso necesitan la instalaci√≥n de otros paquetes como [readxl](https://readxl.tidyverse.org/). Por otro lado, los archivos `csv` (*comma separated values*) con los que trabajar√°s en esta clase, se pueden importar de esta manera:

```{r eval=FALSE}
data <- read.csv("osos_hema.csv")
```
```{r include=FALSE}
data <- read.csv("docs/datos/osos_hema.csv")
```
:::{.callout-important}
Aseg√∫rate que el archivo `osos_hema.csv` se encuentra en el directorio que indicaste previamente.
:::
Una vez que hayas importado el archivo, lo puedes ver como *data frame* en el panel Environment. Puedes hacer clic sobre el objeto e inspeccionarlo brevemente.

Repasa brevemente las funciones que aprendiste en @sec-intro para obtener datos m√°s espec√≠ficos sobre el objeto `data`.

```{r eval=FALSE}
head(data)
summary(data)
str(data)
```

Observa que hay una gran cantidad de datos faltantes `NA‚Äôs`.  ¬øSon estos datos faltantes un problema para calcular la media y mediana de la columna colesterol?

```{r echo=TRUE}
mean(data$colesterol)
median(data$colesterol)
```

Los resultados muestran que no es posible calcular estas medidas de tendencia sin haber limpiado el *data frame*. Para poder hacerlo, es aconsejable elegir las columnas de inter√©s y realizar la limpieza de `NA‚Äôs` √∫nicamente en √©stas.

## Manipulaci√≥n de *data frames*

Ahora aprender√°s a manipular los datos que ser√°n analizados en la secci√≥n [-@sec-est-basica], e investigar√°s si existe alguna diferencia entre la media de colesterol de machos y hembras, y si la hubiera, testear√°s si esta disimilitud es estad√≠sticamente significativa realizando la prueba de hip√≥tesis estad√≠stica T de Student.

Por √∫ltimo, investigar√°s si existe correlaci√≥n entre los niveles de colesterol y triglic√©ridos en ambos sexos. Para esto necesitas algunos paquetes.

```{r eval=FALSE}
library(tidyverse)
library(rafalib)
```

Para deshacerte de los `NA's` puedes extraer las columnas de inter√©s de una manera parecida a la que has aprendido anteriormente.

```{r eval=FALSE}
lipidos <- data[ ,c("colesterol", "trigliceridos", "sexo")]
lipidos <- na.omit(lipidos)

# Tambi√©n puedes buscar las filas que poseen NA‚Äôs
which(is.na(data$colesterol))
```
üìö **Tarea**

¬øC√≥mo podr√≠as deshacerte de los `NA's` utilizando `which(is.na())`?

### *pipes*

Ahora usar√°s una de las funciones m√°s populares del paquete *magrittr* (parte de *tidyverse*), llamado **_pipe_** y escrito como `%>%`. Este operador se utiliza mucho en lenguaje de programaci√≥n ya que simplifica la uni√≥n de funciones. Sin embargo, desde la versi√≥n de R 4.1.0, se introdujo el operador nativo `|>`. El uso de ambos depende del contexto en el cual son implementados como se discute en [este art√≠culo](https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/), y hay un gran resumen del uso de cada uno [aqu√≠](https://stackoverflow.com/questions/67633022/what-are-the-differences-between-rs-native-pipe-and-the-magrittr-pipe).

Sea cual sea tu elecci√≥n, ambos *pipes* se traducen a lenguaje com√∫n como ‚Äúdespu√©s‚Äù, y se utilizan para pasar el **output** de una primer funci√≥n hacia una segunda, tercera, etc.

Puedes aprovechar esta funci√≥n para simplificar la escritura del c√≥digo para extraer ciertas columnas de `data`.

```{r echo=TRUE}
# Extrae las columnas de lipidos y sexo
lipidos <- data %>%
            select(colesterol, trigliceridos, sexo) %>%
            na.omit()

# Extrae las columnas de compuestos nitrogenados y sexo
nitrogenados <- data %>%
                select(proteina, bun, sexo) %>%
                na.omit()
```


Ahora el c√≥digo es m√°s f√°cil de interpretar y este se lee como: toma el objeto data; *despu√©s* selecciona las columnas colesterol, triglic√©ridos y sexo; *despu√©s* omite los `NA‚Äôs`. Esto se lee de igual manera para el objeto `nitrogenados`.

## Estad√≠stica b√°sica en R {#sec-est-basica}

Puedes realizar una exploraci√≥n r√°pida de tus datos antes de iniciar an√°lisis espec√≠ficos. Observemos en un *scatterplot* como se distribuyen los datos.

```{r}
plot(data)
```
### Correlaci√≥n
Parece ser que hay alg√∫n tipo de relaci√≥n entre las variables de colesterol y triglic√©ridos. Podemos utilizar la funci√≥n `cor` para determinar si de hecho existe alguna correlaci√≥n.

```{r}
cor(lipidos$colesterol, lipidos$trigliceridos)
```
Este resultado, sin embargo, no es muy claro pero recuerda que no estamos separando estos datos basados en otra variable como edad o sexo, que podr√≠an tener una influencia en este resultado. Adem√°s, por *default* `cor` utiliza el m√©todo de Pearson. ¬øCambiar√≠a este resultado en base al uso de otro m√©todo?

::: callout-tip
## Ejercicio
Calcula la correlaci√≥n de estas variables mediante el m√©todo de Spearman.
:::

Ahora apliquemos m√°s funciones de *dplyr* junto con los *pipes* para calcular la correlaci√≥n en base al sexo.
```{r}
lipidos %>%
    group_by(sexo) %>%
    summarise(cor = cor(colesterol, trigliceridos))
```

Tambi√©n puedes utilizar *ggplot2* para graficar esta posible correlaci√≥n.

```{r}
lipidos %>%
    ggplot(aes( x = colesterol, y = trigliceridos, color = sexo)) +
    geom_point(alpha = 0.5) +
    geom_smooth(method = "lm", se = FALSE) +
    labs( x = "colesterol (mg/dl)", y = "triglic√©ridos (mg/dl)") +
    theme_bw()
```

### Diferencias de medias

Ahora utiliza el objeto `nitrogenados` e inspecciona en detalle alguna diferencia entre machos y hembras.

```{r eval=FALSE}
nitrogenados %>%
    select(bun, sexo) %>%
    group_by(sexo) %>%
    summarise(media = mean(bun),
                mediana = median(bun),
                desv_est = sd(bun))
```

Estas posibles diferencias tambi√©n pueden ser observadas tambi√©n mediante un gr√°fico decaja y biggotes.

```{r}
boxplot(nitrogenados$bun ~ nitrogenados$sexo)
boxplot(nitrogenados$proteina ~ nitrogenados$sexo)
```


La diferencia de medidas de tendencia entre sexos no es clara. Sin embargo, ¬øc√≥mo podemos saber que esta diferencia es o no estad√≠sticamente significativa?

Aunque a fines de este ejemplo, utilizaremos el test de Student para calcular el valor p, es necesario aclarar que no profundizaremos en detalles matem√°ticos o discutiremos sobre que tipos de test podr√≠an contestar esta pregunta de mejor manera. Si deseas tener m√°s conocimiento sobre temas estad√≠sticos, dir√≠gete a la secci√≥n de Fuentes de este documento y descarga los libros y documentos que sean de tu inter√©s.

Primero, debemos observar si nuestros datos siguen una distribuci√≥n normal. Para esto utilizaremos funciones base de R y adem√°s la funci√≥n `mypar()` del paquete *rafalib* que instalamos previamente.

```{r}
mypar(1,2)
# Grafica un histograma
hist(nitrogenados$bun, main = "Distribuci√≥n de valores de Urea en sangre")

# y adem√°s
qqnorm(nitrogenados$bun)
qqline(nitrogenados$bun)
```

Si deseas saber m√°s sobre el significado de los Q-Q plots, ingresa [aqu√≠](https://data.library.virginia.edu/understanding-q-q-plots/).

## T de Student

Ahora que tienes evidencia de que los niveles de urea en sangre se aproximan a una distribuci√≥n normal, puedes calcular el valor *p*. Primero necesitas subdividir al objeto `nitrogenados`.

```{r}
# Crea un objeto con los machos
bun_m <- nitrogenados%>%
            filter(sexo == "macho") %>%
                select(bun) %>% unlist()

# Ahora uno con las hembras
bun_h <- nitrogenados %>%
            filter(sexo == "hembra") %>%
                select(bun) %>% unlist()
```

::: callout-tip
## Ejercicio
¬øC√≥mo fueron almacenados los objetos `col_m` y `col_h`?. Lee sobre `unlist` en la secci√≥n de Ayuda.
:::

Puedes entonces realizar la prueba T de Student con una sola l√≠nea de comando.

```{r eval=FALSE}
t.test(bun_h, bun_m, var.equal = T)

#Si solo quieres obtener el valor de p
t.test(bun_h, bun_m, var.equal = T)$p.value
```

El *p*-value = 0.002837017, quiere decir que hay muy baja probabilidad de que la diferencia de medias en los niveles de urea en sangre se deba a un error de muestreo o al azar. Consecuentemente, la hip√≥tesis nula queda rechazada y aceptamos la hip√≥tesis alternativa.

## An√°lisis de Componentes Principales

## Personalizando gr√°ficos con ggplot2

## Fuentes

Este cap√≠tulo fue tomado y adaptado de diversas fuentes, siendo [R for Data Science](https://r4ds.had.co.nz/) y el curso gratis de edX [Statistics and R](https://www.edx.org/course/statistics-and-r), las m√°s grandes influencias de este trabajo.

Tanto el an√°lisis estad√≠stico como la creaci√≥n de gr√°ficos utilizando ggplot2 son temas muy amplios para los cuales existen una amplia gama de recursos en internet. En cuanto a la parte estad√≠stica, he hecho una recopilaci√≥n muy breve de libros que abordan estos temas, as√≠ como tambi√©n sobre la investigaci√≥n reproducible, su importancia, y como llevarla a cabo en R. Para acceder a estos recursos haz clic [aqu√≠](https://mega.nz/fm/d5dBkYRS).

Finalmente, puedes profundizar m√°s en el uso de ggplot2 ingresando a: [Data
Visualization with R](https://cengel.github.io/R-data-viz/) , [Top 50 ggplot2 Visualizations](https://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html#1.%20Correlation) y [Data visualization with ggplot2](https://datacarpentry.org/R-ecology-lesson/04-visualization-ggplot2.html).



![Seguimos trabajando en este tutorial](docs/Figures/under_constrution_bear1.jpeg "Title: An elephant")

